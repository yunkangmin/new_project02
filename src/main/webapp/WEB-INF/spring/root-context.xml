<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 
		aop proxy 객체 생성을 위한 설정
	 	AspectJ 라이브러리를 이용해서 Proxy 객체를 생성해낸다.
	-->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<context:property-placeholder location="classpath:/db.properties"/>
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" 
	      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	      
		<property name="driverClassName" 
		        value="${db.driver}"></property>
		        
		<property name="url" 
		        value="${db.jdbcUrl}"></property>
		        
		<property name="username" value="${db.user}"></property>
		<property name="password" value="${db.password}"></property>
		
	</bean>	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource" />
	 	
	 	<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	 	<property name="mapperLocations" 
	      value="classpath:mappers/**/*Mapper.xml"></property>	
	</bean>
	
	<!-- 트랜잭션 처리를 위해 필요 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 트랜잭션 처리를 위해 필요. @Transactional 애노테이션을 이용한 트랜잭션의 관리가 가능하게 해준다. -->
	<tx:annotation-driven />
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
	   destroy-method="clearCache">
	  <constructor-arg name="sqlSessionFactory" 
	    ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
   	<context:component-scan base-package="org.project.persistence">
	</context:component-scan>
	<context:component-scan base-package="org.project.service">
	</context:component-scan>
	<context:component-scan base-package="org.project.aop">
	</context:component-scan>
		
</beans>
