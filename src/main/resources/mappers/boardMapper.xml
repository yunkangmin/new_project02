<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판관련 파일 -->
<mapper namespace="org.project.mapper.BoardMapper">

<!-- 페이징 처리전 게시글 등록 -->
 <insert id="create">
 insert into tbl_board (title, content, writer) 
 values(#{title},#{content}, #{writer})
 </insert>
<!-- 페이징 처리전 게시글 조회 -->
 <select id="read" resultType="org.project.domain.BoardVO">
 select 
   bno, title, content, writer, regdate, viewcnt , replycnt
 from 
   tbl_board 
 where bno = #{bno}
 </select>

<!-- 페이징 처리전 게시글 수정 -->
 <update id="update">
 update tbl_board set title =#{title}, content =#{content} 
 where bno = #{bno}
 </update>

<!--페이징 처리전  게시글 삭제 -->
 <delete id="delete">
 delete from tbl_board where bno = #{bno}
 </delete>

<!-- 페이징 처리전 게시글 목록 조회 -->
 <select id="listAll" resultType="org.project.domain.BoardVO">
 <![CDATA[
 select 
   bno, title, content, writer, regdate, viewcnt 
 from 
   tbl_board 
 where bno > 0 
 order by bno desc, regdate desc
 ]]>  
 </select>
 
 <!-- 요청한 page에서 시작페이지를 계산한 값이 #{page}에 들어간다. Criteria 클래스 생성전 쿼리.  -->
  <select id="listPage" resultType="BoardVO">
 <![CDATA[
 select 
   bno, title, content, writer, regdate, viewcnt 
 from 
   tbl_board 
 where bno > 0 
 order by bno desc, regdate desc
 limit #{page}, 10
 ]]>  
 </select>
 
<!--   id는 DAO 인터페이스와 동일하게 설정한다. Criteria 클래스(파라미터 관리를 쉽게하기 위해 생성한 클래스)를 사용하여 페이징 처리된 목록을 가져오는 쿼리 -->
	<select id="listCriteria" resultType="BoardVO">
 <![CDATA[
 select 
   bno, title, content, writer, regdate, viewcnt , replycnt
 from 
   tbl_board 
 where bno > 0 
 order by bno desc, regdate desc
 limit #{pageStart}, #{perPageNum}
 ]]>
	</select>
 
 <!-- 전체 게시글 개수를 가져온다. 하단에 페이징 처리를 위해 필요하다.  -->
 <select id="countPaging" resultType="int">
 <![CDATA[
 select 
   count(bno) 
 from 
   tbl_board 
 where 
   bno > 0 
 ]]>
 </select>


<!-- sql 태그를 사용하면 sql을 재사용할 수 있다. -->
<sql id="search">
 <if test="searchType != null" > 
   <if test="searchType == 't'.toString()">
     and title like CONCAT('%', #{keyword}, '%')
   </if>
   <if test="searchType == 'c'.toString()">
     and content like CONCAT('%', #{keyword}, '%')
   </if>
   <if test="searchType == 'w'.toString()">
     and writer like CONCAT('%', #{keyword}, '%')
   </if>     
   <if test="searchType == 'tc'.toString()">
     and ( title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%', #{keyword}, '%'))
   </if>        
   <if test="searchType == 'cw'.toString()">
     and ( content like CONCAT('%', #{keyword}, '%') OR writer like CONCAT('%', #{keyword}, '%'))
   </if>        
   <if test="searchType == 'tcw'.toString()">
     and (   title like CONCAT('%', #{keyword}, '%') 
           OR 
             content like CONCAT('%', #{keyword}, '%') 
           OR 
             writer like CONCAT('%', #{keyword}, '%'))
   </if>              
 </if>  
</sql>
 
<select id="listSearch" resultType="BoardVO">
<![CDATA[  
  select * 
  from tbl_board 
  where bno > 0 
]]>  

  <include refid="search"></include>
  
<![CDATA[    
  order by bno desc
  limit #{pageStart}, #{perPageNum}
]]>  
</select>
  
<select id="listSearchCount" resultType="int">
<![CDATA[  
  select count(bno) 
  from tbl_board 
  where bno > 0 
]]>
  <include refid="search"></include>
 
</select>  

<!-- 댓글  개수 증가 쿼리 -->
<update id="updateReplyCnt">
  update tbl_board set replycnt = replycnt + #{amount} where bno = #{bno}
</update>

<!-- 게시글 조회수 증가 쿼리 -->
<update id="updateViewCnt">
  update tbl_board set viewcnt = viewcnt +1 where bno = #{bno}
</update>
 
</mapper>
